{"name": "test_checkout_004", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x0x7ff67b6afea5+79173]\n\tGetHandleVerifier [0x0x7ff67b6aff00+79264]\n\t(No symbol) [0x0x7ff67b469e5a]\n\t(No symbol) [0x0x7ff67b4c0586]\n\t(No symbol) [0x0x7ff67b4c083c]\n\t(No symbol) [0x0x7ff67b514247]\n\t(No symbol) [0x0x7ff67b4e89af]\n\t(No symbol) [0x0x7ff67b51100d]\n\t(No symbol) [0x0x7ff67b4e8743]\n\t(No symbol) [0x0x7ff67b4b14c1]\n\t(No symbol) [0x0x7ff67b4b2253]\n\tGetHandleVerifier [0x0x7ff67b97a2dd+3004797]\n\tGetHandleVerifier [0x0x7ff67b97472d+2981325]\n\tGetHandleVerifier [0x0x7ff67b993380+3107360]\n\tGetHandleVerifier [0x0x7ff67b6caa2e+188622]\n\tGetHandleVerifier [0x0x7ff67b6d22bf+219487]\n\tGetHandleVerifier [0x0x7ff67b6b8df4+115860]\n\tGetHandleVerifier [0x0x7ff67b6b8fa9+116297]\n\tGetHandleVerifier [0x0x7ff67b69f558+11256]\n\tBaseThreadInitThunk [0x0x7ff9e71e7374+20]\n\tRtlUserThreadStart [0x0x7ff9e8afcc91+33]", "trace": "self = <testCases.test_Credkart_Checkout_003.Test_Checkout_003 object at 0x000001E40A36CA10>\n\n    def test_checkout_004(self):\n        self.log.info(\"test_checkout_004 is started\")\n        self.log.info(f\"Opening the login page-->{self.login_url}\")\n        self.driver.get(self.login_url)\n        self.co = Checkout_Class(self.driver)\n        self.log.info(\"Enter email\")\n        self.co.Enter_email(self.email)\n        self.log.info(\"Enter password\")\n        self.co.Enter_password(self.password)\n        self.log.info(\"Click login button\")\n        self.co.Click_login()\n        self.log.info(\"Click product button\")\n        self.co.Click_product()\n        self.log.info(\"Click proceed to checkout button\")\n>       self.co.Click_proceed_to_checkout()\n\ntestCases\\test_Credkart_Checkout_003.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npageObjects\\CheckOut_Page.py:36: in Click_proceed_to_checkout\n    self.wait.until(expected_conditions.presence_of_element_located((By.XPATH, self.click_proceed_to_checkout_Xpath)))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"a634061e1a4eb713fc228ed5f993f060\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x000001E40BFC1E40>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff67b6afea5+79173]\nE       \tGetHandleVerifier [0x0x7ff67b6aff00+79264]\nE       \t(No symbol) [0x0x7ff67b469e5a]\nE       \t(No symbol) [0x0x7ff67b4c0586]\nE       \t(No symbol) [0x0x7ff67b4c083c]\nE       \t(No symbol) [0x0x7ff67b514247]\nE       \t(No symbol) [0x0x7ff67b4e89af]\nE       \t(No symbol) [0x0x7ff67b51100d]\nE       \t(No symbol) [0x0x7ff67b4e8743]\nE       \t(No symbol) [0x0x7ff67b4b14c1]\nE       \t(No symbol) [0x0x7ff67b4b2253]\nE       \tGetHandleVerifier [0x0x7ff67b97a2dd+3004797]\nE       \tGetHandleVerifier [0x0x7ff67b97472d+2981325]\nE       \tGetHandleVerifier [0x0x7ff67b993380+3107360]\nE       \tGetHandleVerifier [0x0x7ff67b6caa2e+188622]\nE       \tGetHandleVerifier [0x0x7ff67b6d22bf+219487]\nE       \tGetHandleVerifier [0x0x7ff67b6b8df4+115860]\nE       \tGetHandleVerifier [0x0x7ff67b6b8fa9+116297]\nE       \tGetHandleVerifier [0x0x7ff67b69f558+11256]\nE       \tBaseThreadInitThunk [0x0x7ff9e71e7374+20]\nE       \tRtlUserThreadStart [0x0x7ff9e8afcc91+33]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:138: TimeoutException"}, "attachments": [{"name": "log", "source": "773bdc89-9bb1-4609-a43e-7d4f07156ec9-attachment.txt", "type": "text/plain"}], "start": 1750571941470, "stop": 1750571957500, "uuid": "dc04d830-bc30-4db4-a1f1-4bae10783940", "historyId": "a14b4dc3c7edea0b1c6eed32f46286e5", "testCaseId": "a14b4dc3c7edea0b1c6eed32f46286e5", "fullName": "testCases.test_Credkart_Checkout_003.Test_Checkout_003#test_checkout_004", "labels": [{"name": "parentSuite", "value": "testCases"}, {"name": "suite", "value": "test_Credkart_Checkout_003"}, {"name": "subSuite", "value": "Test_Checkout_003"}, {"name": "host", "value": "Credence-Pc"}, {"name": "thread", "value": "12244-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testCases.test_Credkart_Checkout_003"}]}